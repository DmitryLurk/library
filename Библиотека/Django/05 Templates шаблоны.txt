https://www.youtube.com/watch?v=v3JM4yUFdNo&list=PLA0M1Bcd0w8xO_39zZll2u1lz_Q-Mwn1F&index=6&ab_channel=selfedu

Для отображения шаблонов используется метод render

def index(request):
    return render(request, 'здесь прописываем путь к файлу в папке templates вида имяприложения/название файла.html')
в каталоге проекта необходимо создать папку templates а в ней папку с названием приложения тк при сборке все папки templates приложений будут слиты в одну папку templates
Там создаются файлы представлений на html
----------------------------------------------------------------------
https://www.youtube.com/watch?v=Sr-1OBLge6s&list=PLA0M1Bcd0w8xO_39zZll2u1lz_Q-Mwn1F&index=11&ab_channel=selfedu
Пользовательские теги шаблонов
simple tags - простые теги
inclusion tags - включающие теги

теги используют для переиспользования кода в переменной

для этого создается папка templatestag в каталоге приложения проекта
в ней создается файл __init__.py чтобы сообщить что этот каталог является пакетом
далее создаем файл где будем прописывать логику работы тега названиеприложения_tags.py
 импортируем туда модели и модуль templates
from django import template
from папкаприложения.models import *

Далее заводим переменную как экземпляр класса library
register = template.Library()

и прописываем нужную нам функцию на которую накладываем декоратор с нашей переменной и simpltag ом

@register.simple_tag()
def get_categories():
    return Category.objects.all()	Функцию называем по своему. В данном случае она возвращает все записи из таблицы БД