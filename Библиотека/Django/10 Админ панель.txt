Для доступа к админ панели необходиом прописать в адресной строке после адреса сайта /admin/ 
Чтобы русифицировать админку необходимо в файле settings.py проекта найти строчку

LANGUAGE_CODE = "ru-ru"

Изначально ни одного пользователя в проекте нет. Что бы создать пользователья необходимо в терминале прописать

python manage.py createsuperuser

далее вводим имя пользователя и прочие данные и можем входить в админку

--------------------------------------------------------------------------------
Что бы зарегистрировать приложение в админке необходимо необходимо в файле admin.py прописать те модели которые хотим чтобы были доступны в админке
или зарегать их все

Сперва импортируем модели
from .models import *

Далее регистрируем через команду

admin.site.register(НазваниеКлассаМодели)
--------------------------------------------------------------------------------
Если мы хотим поменять имя модели отображаемое в админ панеле
необходимо в классе модели создать вложенные метакласс

class Meta:
        verbose_name = 'Название отображаемого имени' 	это для отображения имени
	verbose_name_plural = 'Известные женщины'	Это для отображения имени во множественном числе
	ordering = ['time_create', 'title']		Эта переменная для сортировки
		Знак минус в названии поля модели указывает на обратную сортировку
		ordering = ['-time_create']
--------------------------------------------------------------------------------
Чтобы изменить названия категорий(по сути это каталоги с моделями ваших приложений) в админке ('пользователи и группы', 'название ваших приложений')
необходимо зайти в файл apps.py в ПРИЛОЖЕНИИ вашего проекта 

class НазваниеприложенияConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "Названиеприложения"

и прописать там дополнительно 
    verbose_name = 'Название отображаемого имени приложения'

Но чтобы это все работало правильно в фале проекта settings.py в переменной INSTALLED_APPS = []
Наше приложение должно быть зарегестрированно не по имени самого приложения а прописано как путь к классу в файле apps.py нашего приложения НазваниеприложенияConfig

INSTALLED_APPS = [
    "названиеПриложения.apps.НазваниеприложенияConfig",
]
--------------------------------------------------------------------------------
Чтобы в меню модели когда выбираешь ее в админке отображались дополнительные стобцы необходимо в файле ПРИЛОЖЕНИЯ admin.py прописать вспомогательный класс

class названиемоделиAdmin(admin.ModelAdmin):
    list_display = ('id', 'title', 'time_create', 'photo', 'is_published') атрибут прописывает что будет отображаться
    list_display_links = ('id', 'title') здесь указывает какие поля модели будут кликабельны на отображаемом экране чтобы перейти непосредственно в саму статью (наприм для ред)
    search_fields = ('title', 'content') указываются поля по которым можно будет производить поиск
    list_editable = ('is_published',) здесь мы прописываем поля которые можно будет редактировать прямо в админ панели
    list_filter = ['is_published', 'time_create'] можно установить по каким полям класса модели справа в админке будет отображаться фильтр

обязательно регистрируем класс в админке

admin.site.register(НазваниеКлассаМодели, названиемоделиAdmin)
--------------------------------------------------------------------------------
Чтобы переопределить название столбцов отображаемых в админке неоьходиме в файле models.py приложения
в классе модели у каждого его атрибута надо определить переменную verbose_name 

class Названиемодели(models.Model):
    title = models.CharField(max_length=255, verbose_name='Заголовок')